# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Snow Transfer Tool

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    environment: s3-deploy
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-latest', 'ubuntu-latest', 'windows-latest']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install pyinstaller
        pip install boto3
        pip install configparser
        pip install humanfriendly
        pip install tqdm
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Build artifact
      run: pyinstaller --onefile snowTransfer
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::842811333022:role/github-s3-role
        role-session-name: s3rolesession
        aws-region: us-east-1
    # Upload a file to AWS s3
    - name:  Copy Windows version snowTransferTool to s3
      if: runner.os == 'Windows'
      run: |
        aws s3 cp ./dist/ s3://${{ secrets.AWS_BUCKET }}/windows/ --recursive
    - name:  Copy Linux version snowTransferTool to s3
      if: runner.os == 'Linux'
      run: |
        aws s3 cp ./dist/ s3://${{ secrets.AWS_BUCKET }}/linux/ --recursive
    - name:  Copy MacOS version snowTransferTool to s3
      if: runner.os == 'macOS'
      run: |
        aws s3 cp ./dist/ s3://${{ secrets.AWS_BUCKET }}/macos/ --recursive
  